/*
Запит повинен виводити такі стовпчики:


date — дата;
country — країна;
send_interval — інтервал відправлення;
is_verified — перевірено аккаунт чи ні;
is_unsubscribed — підписник відписався;


account_cnt — кількість створених акаунтів;
sent_msg — кількість відправлених листів;
open_msg — кількість відкритих листів;
visit_msg — кількість переходів по листах;


total_country_account_cnt — загальна кількість створених підписників по країні;
total_country_sent_cnt — загальна кількість відправлених листів по країні;
rank_total_country_account_cnt — рейтинг країн за кількістю створених підписників;
rank_total_country_sent_cnt — рейтинг країн за кількістю відправлених листів.


Вимоги до SQL-запиту
1. Твій запит має виводити інформацію по створених акаунтах, відправлених листах, відкритих листах, листах де були кліки в розрізі показників:
date;
country;
send_interval;
is_verified;
is_unsubscribed.
Для email метрик (відправлених листах, відкритих листах, листах де були кліки) в якості дати використовуй дату відправки листа.


2. Ці дві частини (по акаунтах і листах) не повинні впливати одна на одну (використовуй UNION).


3. Опис підрахунків:
total_country_account_cnt — загальна кількість створених акаунтів по країні;
total_country_sent_cnt — загальна кількість відправлених листів по країні;
rank_total_country_account_cnt — рейтинг країн за кількістю створених акаунтів;
rank_total_country_sent_cnt — рейтинг країн за кількістю відправлених листів.


4. У фіналі залиш лише ті записи, де rank_total_country_account_cnt або rank_total_country_sent_cnt менше або дорівнює 10.


5. Обов'язково використай хоча б одне CTE, винеси туди логічні частини запиту.


6. Для розрахунку рангу використовуй функції-вікна.
*/




WITH sent_msg_data AS (
 -- Отримуємо інформацію про відправлені листи
SELECT DATE_ADD(date, INTERVAL es.sent_date DAY) AS date,
       sp.country,
       a.send_interval,
       a.is_verified,
       a.is_unsubscribed,
       0 AS account_cnt,
       COUNT(DISTINCT es.id_message) AS sent_msg,
       COUNT(DISTINCT eo.id_message) AS open_msg,
       COUNT(DISTINCT ev.id_message) AS visit_msg
FROM `DA.email_sent` AS es
LEFT JOIN `DA.email_open` AS eo
ON es.id_message = eo.id_message
LEFT JOIN `DA.email_visit` AS ev
ON es.id_message = ev.id_message
JOIN `DA.account` AS a
ON es.id_account = a.id
JOIN `DA.account_session` AS acs
ON es.id_account = acs.account_id
JOIN `DA.session` AS s
ON acs.ga_session_id = s.ga_session_id
JOIN `DA.session_params` AS sp
ON acs.ga_session_id = sp.ga_session_id
GROUP BY DATE_ADD(date, INTERVAL es.sent_date DAY),
         sp.country,
         a.send_interval,
         a.is_verified,
         a.is_unsubscribed
),


accounts_data AS (
  -- Отримуємо інформацію про створені акаунти
SELECT s.date,
       sp.country,
       a.send_interval,
       a.is_verified,
       a.is_unsubscribed,
       COUNT(DISTINCT a.id) AS account_cnt,
       0 AS sent_msg,
       0 AS open_msg,
       0 AS visit_msg
FROM `DA.account` AS a
JOIN `DA.account_session` AS acs
ON a.id = acs.account_id
JOIN `DA.session` AS s
ON acs.ga_session_id = s.ga_session_id
JOIN `DA.session_params` AS sp
ON acs.ga_session_id = sp.ga_session_id
GROUP BY s.date,
         sp.country,
         a.send_interval,
         a.is_verified,
         a.is_unsubscribed
),


accounts_and_send_msg_data AS (
 -- Об"єднуємо інформацію про стровені акаунти та відправлені листи
SELECT date,
       country,
       send_interval,
       is_verified,
       is_unsubscribed,
       SUM(account_cnt) AS account_cnt,
       SUM(sent_msg) AS sent_msg,
       SUM(open_msg) AS open_msg,
       SUM(visit_msg) AS visit_msg
FROM (SELECT *
FROM accounts_data
UNION ALL
SELECT *
FROM sent_msg_data)
GROUP BY date,
         country,
         send_interval,
         is_verified,
         is_unsubscribed
),


accounts_and_send_msg_with_totals_data AS (
 -- Додаємо агрегацію по країнам про створені акаунти та відправлені листи
SELECT date,
       country,
       send_interval,
       is_verified,
       is_unsubscribed,
       account_cnt,
       sent_msg,
       open_msg,
       visit_msg,
       SUM(account_cnt) OVER (PARTITION BY country) AS total_country_account_cnt,
       SUM(sent_msg) OVER (PARTITION BY country) AS total_country_sent_cnt
FROM accounts_and_send_msg_data
),




final_data_with_ranks AS (
  -- Визначаємо рейтинги країн за кількістю створених акаунтів та відправлених листів
SELECT date,
       country,
       send_interval,
       is_verified,
       is_unsubscribed,
       account_cnt,
       sent_msg,
       open_msg,
       visit_msg,
       total_country_account_cnt,
       total_country_sent_cnt,
       DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt,
       DENSE_RANK() OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt
FROM accounts_and_send_msg_with_totals_data
)


 -- Залишаємо тільки записи для топ-10 країн за рейтингами
SELECT *
FROM final_data_with_ranks
WHERE rank_total_country_account_cnt <= 10 OR rank_total_country_sent_cnt <= 10
ORDER BY country, date;
